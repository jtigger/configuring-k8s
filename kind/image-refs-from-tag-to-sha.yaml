#! image-refs-from-tag-to-sha.yaml
#! - applies to dependencies/ingress-nginx.yaml
#! - replaces tags with their digest equivalents for referenced container images. This ensures that the images
#!   we are installing are exactly the ones selected by the author (tags can be moved, digests are immutable).
---
#@ load("@ytt:overlay", "overlay")

#! kindAndName yields a matcher that selects any Kubernetes resource of the specified `kind` with the given `name`.
#@ def kindAndName(kind, name):
#@   return overlay.subset({"kind": kind, "metadata": {"name": name}})
#@ end

#! replaceContainerImage yields an overlay fragment replacing the `image` property of the container named `container_name`
#@ def replaceContainerImage(container_name, image):
spec:
  template:
    spec:
      containers:
        #@overlay/match by="name"
        - name: #@ container_name
          image: #@ image
#@ end
---

#! source tag: 0.32.0
#@ nginx_ingress_controller_image = "quay.io/kubernetes-ingress-controller/nginx-ingress-controller@\
#@ sha256:251e733bf41cdf726092e079d32eed51791746560fff4d59cf067508ed635287"

#@overlay/match by=kindAndName("Deployment", "ingress-nginx-controller")
--- #@ replaceContainerImage("controller", nginx_ingress_controller_image)


#! source tag: 1.20.0
#@ kube_webhook_certgen_image = "jettech/kube-webhook-certgen@\
#@ sha256:a5130405b0476373946b5c8f25a5506d0e4e480afb803ef0f0908a5ffd14111a"

#@overlay/match by=kindAndName("Job", "ingress-nginx-admission-create")
--- #@ replaceContainerImage("create", kube_webhook_certgen_image)

#@overlay/match by=kindAndName("Job", "ingress-nginx-admission-patch")
--- #@ replaceContainerImage("patch", kube_webhook_certgen_image)
